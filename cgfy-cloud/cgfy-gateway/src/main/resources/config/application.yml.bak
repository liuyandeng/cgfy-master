spring: 
  http:
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  jackson: 
    dateFormat: yyyyMMddHHmmss
    time-zone: GMT+8
  servlet: 
    multipart:
      enabled: true
      max-file-size: 500MB
      max-request-size: 500MB
  cloud:
    gateway:
      httpclient: 
        #  连接超时时间 单位毫秒
        connect-timeout: 300000
        #  响应超时时间 单位毫秒
        response-timeout: 300000
      discovery: 
        locator:
          enabled: true
      routes: 
        - id: boot-admin
          uri: lb://jbdp-admin
          predicates:
            - Path= /boot-admin/**
          filters:
            - StripPrefix=1
        - id: sleuth
          uri: lb://jbdp-sleuth
          predicates:
            - Path= /zipkin/**
#          filters:
#            - StripPrefix=1
        - id: oauth
          uri: lb://jbdp-oauth
          predicates:
            - Path= /oauth/**
          filters:
            - name: RequestRateLimiter
              args: 
                # 允许用户每秒处理多少个请求
                redis-rate-limiter.replenishRate: 10
                # 令牌桶的容量，允许在一秒钟内完成的最大请求数
                redis-rate-limiter.burstCapacity: 20
                # 使用SpEL按名称引用bean
                key-resolver: "#{@ipAuthorizationKeyResolver}"
#            - name: Login
#              args: 
#                enabled: true
        - id: uums
          uri: lb://jbdp-uums
          predicates:
            - Path= /uums/**
          filters:
            - StripPrefix=1
            - name: RequestRateLimiter
              args: 
                # 允许用户每秒处理多少个请求
                redis-rate-limiter.replenishRate: 10
                # 令牌桶的容量，允许在一秒钟内完成的最大请求数
                redis-rate-limiter.burstCapacity: 20
                # 使用SpEL按名称引用bean
                key-resolver: "#{@ipAuthorizationKeyResolver}"
        - id: file
          uri: lb://jbdp-file
          predicates:
            - Path= /file/**
          filters:
            - StripPrefix=1
        - id: workflow
          uri: lb://jbdp-workflow
          predicates:
            - Path= /workflow/**
          filters:
            - StripPrefix=1
        - id: ldap
          uri: lb://jbdp-ldap
          predicates:
          - Path= /ldap/**
          filters:
          - StripPrefix=1
        - id: news
          uri: lb://jbdp-news
          predicates:
          - Path= /news/**
          filters:
          - StripPrefix=1
        - id: library
          uri: lb://jbdp-library
          predicates:
            - Path= /library/**
          filters:
            - StripPrefix=1
        - id: kettle
          uri: lb://jbdp-kettle
          predicates:
          - Path= /kettle/**
          filters:
          - StripPrefix=1
        - id: bussSys
          uri: lb://jbdp-system
          predicates:
          - Path= /bussSys/**
          filters:
          - StripPrefix=1
management:
  cloudfoundry:
    enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    beans: 
      enabled: true
     
hystrix: 
  command: 
    default:
      execution:
        timeout:
          enabled: false

feign: 
  client: 
    config:
        default: 
          loggerLevel: FULL
          #  连接超时时间 单位毫秒
          connectTimeout: 300000
          #  读取超时时间 单位毫秒
          readTimeout: 300000
  httpclient:
    enabled: false
    #  连接超时时间 单位秒
    connection-timeout: 300
  okhttp:
    enabled: true

ribbon:
  #  连接超时时间 单位毫秒，默认2000
  ConnectTimeout: 120000
  #  读取超时时间 单位毫秒，默认5000
  ReadTimeout: 300000
    
logging: 
  config: classpath:config/logback-spring.xml

jbdp: 
  gateway: 
    ip-check:
      enable: false
      allow-i-p-range:
      - 192.168.1.1-192.168.1.254
      - 192.168.80.1-192.168.80.1
      url-prefix-ignore:
      - /error
    log:  
      # 不进行操作日志记录的前缀
      optLogIgnore: 
      - /error
      - /oauth/token
      - /oauth/ext
      - /uums/FreeCertification/SysPriCommon/getSysPriApiUrlNoEmpty
        
---
spring:
  profiles: dev
  redis:
    host: localhost
    port: 6379
    password:
    database: 2
    lettuce: 
      pool:
        # 连接池最大连接数（使用负值表示没有限制）默认 8
        max-active: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: -1
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）默认 -1
        max-wait: -1
    # 链接超时时间（毫秒）
    timeout: 6000
  cloud: 
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: '*'
            allowedMethods: '*'
            allowedHeaders: '*'
            # 预检请求的缓存时间（秒），即在这个时间段里，对于相同的跨域请求不会再预检了
            maxAge: 18000

server:
  # 请求连接超时时间, 单位毫秒
  connection-timeout: 300000
  tomcat:
    accept-count: 100
    min-spare-threads: 10

---
spring:
  profiles: test
  redis:
    host: localhost
    port: 6379
    password:
    database: 2
    lettuce: 
      pool:
        # 连接池最大连接数（使用负值表示没有限制）默认 8
        max-active: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: -1
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）默认 -1
        max-wait: -1
    # 链接超时时间（毫秒）
    timeout: 6000
  cloud: 
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: '*'
            allowedMethods: '*'
            allowedHeaders: '*'
            # 预检请求的缓存时间（秒），即在这个时间段里，对于相同的跨域请求不会再预检了
            maxAge: 18000

server:
  # 请求连接超时时间, 单位毫秒
  connection-timeout: 300000
  tomcat:
    accept-count: 100
    min-spare-threads: 20

---
spring:
  profiles: deploy
  redis:
    host: localhost
    port: 6379
    password:
    database: 2
    lettuce: 
      pool:
        # 连接池最大连接数（使用负值表示没有限制）默认 8
        max-active: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: -1
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）默认 -1
        max-wait: -1
    # 链接超时时间（毫秒）
    timeout: 6000
  cloud: 
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: '*'
            allowedMethods: '*'
            allowedHeaders: '*'
            # 预检请求的缓存时间（秒），即在这个时间段里，对于相同的跨域请求不会再预检了
            maxAge: 18000

server:
  # 请求连接超时时间, 单位毫秒
  connection-timeout: 300000
  tomcat:
    accept-count: 10000
    min-spare-threads: 50

---
spring:
  profiles: product
  redis:
    host: localhost
    port: 6379
    password:
    database: 2
    lettuce: 
      pool:
        # 连接池最大连接数（使用负值表示没有限制）默认 8
        max-active: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: -1
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）默认 -1
        max-wait: -1
    # 链接超时时间（毫秒）
    timeout: 6000
  cloud: 
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowCredentials: true
            allowedOrigins: '*'
            allowedMethods: '*'
            allowedHeaders: '*'
            # 预检请求的缓存时间（秒），即在这个时间段里，对于相同的跨域请求不会再预检了
            maxAge: 18000

server:
  # 请求连接超时时间, 单位毫秒
  connection-timeout: 300000
  tomcat:
    accept-count: 10000
    min-spare-threads: 200

